@model MyEcommerce.Models.ProductAddModel
@*@model Tuple<MyEcommerce.Models.ProductAdd, IEnumerable<MyEcommerce.Models.ProductAdd>>*@

@*@{
    Layout = null;
}*@

<!DOCTYPE html>

<html>
<head>
    <meta name="viewport" content="width=device-width" />

    <title>CardView</title>
    <style>
    </style>
    <script src="~/Scripts/jquery-3.4.1.min.js"></script>
    <link href="~/Content/bootstrap.css" rel="stylesheet" />
    <link href="~/Content/Styles/CardStyle.css" rel="stylesheet" />
    <script>
        $(document).ready(function () {
            /* Set rates + misc */
            var taxRate = 0.05;
            var shippingRate = 15.00;
            var fadeTime = 300;


            /* Assign actions */
            $('.product-quantity input').change(function () {
                updateQuantity(this);
            });

            $('.product-removal button').click(function () {
                removeItem(this);
            });


            /* Recalculate cart */
            function recalculateCart() {
                var subtotal = 0;

                /* Sum up row totals */
                $('.product').each(function () {
                    subtotal += parseFloat($(this).children('.product-line-price').text());
                });

                /* Calculate totals */
                var tax = subtotal * taxRate;
                var shipping = (subtotal > 0 ? shippingRate : 0);
                var total = subtotal + tax + shipping;

                /* Update totals display */
                $('.totals-value').fadeOut(fadeTime, function () {
                    $('#cart-subtotal').html(subtotal.toFixed(2));
                    $('#cart-tax').html(tax.toFixed(2));
                    $('#cart-shipping').html(shipping.toFixed(2));
                    $('#cart-total').html(total.toFixed(2));
                    if (total == 0) {
                        $('.checkout').fadeOut(fadeTime);
                    } else {
                        $('.checkout').fadeIn(fadeTime);
                    }
                    $('.totals-value').fadeIn(fadeTime);
                });
            }


            /* Update quantity */
            function updateQuantity(quantityInput) {
                /* Calculate line price */
                var productRow = $(quantityInput).parent().parent();
                var price = parseFloat(productRow.children('.product-price').text());
                var quantity = $(quantityInput).val();
                var linePrice = price * quantity;

                /* Update line price display and recalc cart totals */
                productRow.children('.product-line-price').each(function () {
                    $(this).fadeOut(fadeTime, function () {
                        $(this).text(linePrice.toFixed(2));
                        recalculateCart();
                        $(this).fadeIn(fadeTime);
                    });
                });
            }


            /* Remove item from cart */
            function removeItem(removeButton) {
                /* Remove row from DOM and recalc cart total */
                var productRow = $(removeButton).parent().parent();
                productRow.slideUp(fadeTime, function () {
                    productRow.remove();
                    recalculateCart();
                });
            }

        });
    </script>
</head>

<body>
    @using (Html.BeginForm("CardView", "Home", FormMethod.Post))
    {
        @Html.AntiForgeryToken()
        <h1>Shopping Cart</h1>

        <div class="shopping-cart">

            <div class="column-labels">
                <label class="product-image">Image</label>
                <label class="product-details">Product</label>
                <label class="product-price">Price</label>
                <label class="product-quantity">Quantity</label>
                <label class="product-removal">Remove</label>
                <label class="product-line-price">Total</label>
                @*<label class="product-line-price">Address</label>*@
            </div>

            @*@foreach (var item in Model.Item2)
                {*@
            <div class="product">
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                @Html.HiddenFor(model => model.id)
                <div class="product-image">

                    <img src="~/Images/@Model.imageUrl" width="100" height="150" />
                    @Html.HiddenFor(model => model.imageUrl)
                </div>
                <div class="product-details">
                    <div class="product-title">Description</div> <br />
                    <div class="product-title">@Model.details</div>
                    @Html.HiddenFor(model => model.details)
                    @*<p class="product-description">The best dog bones of all time. Holy crap. Your dog will be begging for these things! </p>*@
                    <p class="product-description">@Model.description</p>
                    @Html.HiddenFor(model => model.description)

                </div>
                <div class="product-price">@Model.prize</div>
                @Html.HiddenFor(model => model.prize)
                <div class="product-quantity">
                    @*<input type="number" value="1" min="1">*@
                    @Html.EditorFor(model => model.flag, new { htmlAttributes = new { @type = "number", @Value = "1" } })
                    @Html.ValidationMessageFor(model => model.flag, "", new { @class = "text-danger" })

                </div>
                <div class="product-removal">
                    <button class="remove-product">
                        Remove
                    </button>
                </div>
                <div class="product-line-price">@Model.prize here</div>


            </div>
            @Html.LabelFor(model => model.address, htmlAttributes: new { @class = "control-label col-md-2" })
            @Html.EditorFor(model => model.address, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.address, "", new { @class = "text-danger" })
            @*@Html.ActionLink("AddToCart", "AddToCart", new { id = item.id }, new { @class = "checkout" })*@
            @*}*@
            @*@Html.HiddenFor(model => model.Item1.prize)*@
            @*@Html.EditorFor(model => model.Item1.availability, "", new { @class = "text-danger" })*@
            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    <div class="text-center text-md-left">
                        <h4> <input type="submit" value="Save To Cart" class="btn btn-primary checkout" /> </h4>
                    </div>
                </div>
            </div>
            @*<div class="product">
                    <div class="product-image">
                        <img src="https://s.cdpn.io/3/large-NutroNaturalChoiceAdultLambMealandRiceDryDogFood.png">
                    </div>
                    <div class="product-details">
                        <div class="product-title">Nutro™ Adult Lamb and Rice Dog Food</div>
                        <p class="product-description">Who doesn't like lamb and rice? We've all hit the halal cart at 3am while quasi-blackout after a night of binge drinking in Manhattan. Now it's your dog's turn!</p>
                    </div>
                    <div class="product-price">45.99</div>
                    <div class="product-quantity">
                        <input type="number" value="1" min="1">
                    </div>
                    <div class="product-removal">
                        <button class="remove-product">
                            Remove
                        </button>
                    </div>
                    <div class="product-line-price">45.99</div>
                </div>*@

            @*<div class="totals">
                    <div class="totals-item">
                        <label>Subtotal</label>
                        <div class="totals-value" id="cart-subtotal">71.97</div>
                    </div>
                    <div class="totals-item">
                        <label>Tax (5%)</label>
                        <div class="totals-value" id="cart-tax">3.60</div>
                    </div>
                    <div class="totals-item">
                        <label>Shipping</label>
                        <div class="totals-value" id="cart-shipping">15.00</div>
                    </div>
                    <div class="totals-item totals-item-total">
                        <label>Grand Total</label>
                        <div class="totals-value" id="cart-total">90.57</div>
                    </div>
                </div>*@

            @*<button class="checkout">Checkout</button>*@
            @*<h3>@Html.ValidationMessage("Email", new { @class = "text-danger" })</h3>*@
        </div>
        <h3>@Html.ValidationMessage("EmailNotFound", new { @class = "text-danger" })</h3>
    }
    @*<p>@ViewBag.ErrorMessage</p>*@

</body>
<script>
    if ('@TempData["alertMessage"]' == "Item Is Added To Cart") {
        alert('@TempData["alertMessage"]');
    }
</script>

</html>
